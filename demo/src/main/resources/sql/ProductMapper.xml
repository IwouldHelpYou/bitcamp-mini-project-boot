<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper
		PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.model2.mvc.service.product.ProductDAO">
 	
 	
	<resultMap id="productSelectMap" type="ProductVO">
		<result property="prodNo" 	column="prod_no" 		 	 jdbcType="NUMERIC"/>
		<result property="prodName"	column="prod_name" 		 	 jdbcType="VARCHAR" />
		<result property="prodDetail" column="prod_detail" 	 	 jdbcType="VARCHAR" />
		<result property="manuDate" 	column="manufacture_day" jdbcType="VARCHAR" />
		<result property="price" 		column="price" 			 jdbcType="NUMERIC" />
<!--	<result property="imageFile" 	column="image_file" 	 jdbcType="VARCHAR" /> -->
		<result property="regDate" 	column="reg_date" 			 jdbcType="DATE" />
		<result property="proTranCode" 	column="prod_trancode" 	 jdbcType="VARCHAR" />
		<result property="fileName" column="file_Name" 			 jdbcType="NUMERIC" />
	</resultMap>
	
	<!-- SQL : INSERT -->
	<insert 	id="addProduct" parameterType="ProductVO" >

    	<selectKey keyProperty="prodNo" resultType="int" order="AFTER">
        SELECT SEQ_PRODUCT_PROD_NO.currval AS prodNo FROM DUAL
    	</selectKey>
    	
	 	INSERT
		INTO product (  prod_no, manufacture_day , price , prod_detail , prod_name, prod_trancode, reg_date ) 
		VALUES	 (	SEQ_PRODUCT_PROD_NO.nextval, #{manuDate} , #{price} , #{prodDetail} , #{prodName} , #{proTranCode} , SYSDATE )
	 	
	 </insert>
	 
	 <!-- SQL : SELECT ONE -->
	 
	 <!-- join 문써서 prod_no 에 해당하는 image 도 가져와야함 -->
	 <select 	id="findProduct"	parameterType="int"	resultMap="productSelectMap">
		SELECT
		manufacture_day , price, prod_detail, prod_name , prod_No, reg_date , prod_trancode
		FROM product
		WHERE prod_No = #{value}
	 </select>
	 
	 <!-- SQL : UPDATE -->
	 <update	id="updateProduct"	parameterType="ProductVO" >
	   	UPDATE product
	   	<set>
	   		prod_name 	= #{prodName} ,
			prod_detail	= #{prodDetail},
			manufacture_day 	= #{manuDate} ,
			price				= #{price},
			reg_date			= #{regDate},
	        <if test="proTranCode != null">
            prod_trancode = #{proTranCode}
        	</if>
	   	</set>
	   	WHERE prod_no = #{prodNo}
	 </update>
		 
	<!-- SQL : SELECT LIST -->
	<select  id="getProductList"  parameterType="search"	resultMap="productSelectMap">
	  	SELECT *
	  	FROM (	SELECT inner_table.* , ROWNUM AS row_seq
	  					FROM		(	SELECT prod_no , prod_name , price, reg_date, prod_trancode
											FROM product
											<if test="searchCondition != null">
												<where>
													<if test="searchCondition == 0 and searchKeyword !='' ">
										 				prod_no = #{searchKeyword}
													</if>
													<if test="searchCondition == 1 and searchKeyword !='' ">
									 				  	prod_name LIKE '%' || #{searchKeyword} || '%'
													</if>
												</where>
											</if>
											ORDER BY prod_no DESC) inner_table
						WHERE ROWNUM &lt;= #{currentPage}*#{pageSize} )
		WHERE row_seq BETWEEN (((#{currentPage}-1)*#{pageSize})+1) AND (#{currentPage}*#{pageSize})
	 </select>
	 	<!--  위 두번째 subQuery 의  
	 			WHERE ROWNUM &lt;= #{endRowNum} ) 는
	 			WHERE ROWNUM <= #{endRowNum} ) 의미이며..
	 			< 는 keyword 로 &lt; 를	사용.
	 			
	 			<![CDATA[  ~~~  ]]> 를 이용하여 아래와 같이 사용  할 수 있다.
	 			CDATA ==> Character Data 의 의미 Java 에서 \n 같은 특수문자 처리  

				WHERE ROWNUM <![CDATA[ <=]]> #{endRowNum} )
		-->
	
	<!-- SQL : SELECT ROW Count -->	 
	 <select  id="getTotalCount"  parameterType="search" resultType="int">
	  	SELECT COUNT(*)
	  	FROM(	SELECT prod_no , prod_name , prod_trancode
						FROM product
						<if test="searchCondition != null">
							<where>
								<if test="searchCondition == 0 and searchKeyword !='' ">
						 			prod_no = #{searchKeyword}
								</if>
								<if test="searchCondition == 1 and searchKeyword !='' ">
						 			prod_name LIKE '%' || #{searchKeyword} || '%'
						 			
								</if>
							</where>
						</if> ) countTable						
	 </select>
	 
	 <!-- autocomplete 위한 입력문자열받아 조회하는 -->
	 <select  id="getProductAll"  parameterType="String" resultType="String">
	 	SELECT prod_name from product
		WHERE prod_name LIKE '%' || #{value} || '%'
	 </select>

</mapper>